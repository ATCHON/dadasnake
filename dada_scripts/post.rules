rule post_control:
    input:
        "sequenceTables/all.seqTab.RDS",
        "sequenceTables/all.seqs.fasta",
        expand("stats/QC_{step}.{run}.{direction}.pdf",step=['1','filtered'],direction=['fwd','rvs'],run=samples.run.unique())
    output:
        "postprocessing.done"
    threads: 1
    params:
        runtime="00:10:00",
        mem="8G"
    shell:
        """
        touch {output}
        """

rule guilds:
    input:
        "sequenceTables/all.OTUs.tax.seq.tsv"
    output:
        "post/all.OTUs.tax.seq.guilds.tsv"
    threads: 1
    params:
        mem="8G",
        runtime="48:00:00"
    log: "logs/funguild.log"
    conda: "dada_env_test.yml"
    message: "Running funguild on {input}."
    shell:
        """
        {config[dada_root]}/dada_scripts/Guilds_v1.1.local.2.py -otu {input} -output {output} -path_to_db {config[Funguild_DB]} &> {log}
        """

rule fapro:
    input:
        "sequenceTables/all.OTUs.tax.seq.tsv"
    output:
        temp("post/fapro.tsv"),
        "post/all.OTUs.tax.seq.fapro.tsv"
    threads: 1
    params:
        mem="8G",
        runtime="48:00:00", 
        sub=7 if config['taxonomy']['look_for_species'] else 6
    log: "logs/faprotax.log"
    conda: "dada_env_test.yml"
    message: "Running faprotax on {input}."
    shell:
        """
        NCOL=$((`awk '{{print NF}}' {input} | sort -nu | tail -n 1` -1))
        ICOL=$((NCOL-{params.sub}))
        IGCOLS=`eval echo {{$ICOL..$NCOL}} | sed 's/ /,/g'`
        {config[dada_root]}/dada_scripts/collapse_table.py -i {input} \
         --omit_unrepresented_groups --out_groups2records_table {output[0]} -g {config[Faprotax_DB]}\
         -d taxonomy --column_names_are_in first_data_line --omit_columns 0,$IGCOLS
        paste {input} <(awk '{{if($1 !~ /^#/){{if($1 ~ /^record$/) {{for (i = 2; i <= NF; ++i) {{a[i]=$i}};\
         print "FAPROTAX"}}else {{ b = "";\
         for (i = 2; i <= NF; ++i) {{if($i == "1") {{b = b a[i] ";" }}}};\
         print b}}}}}}' {output[0]}) >> {output[1]}
        """

#rule panFP:

#rule pieCrust:

#tax4fun

#label non-target, non-ITSx, 

#if config['keep_target_taxa'] == ".":
