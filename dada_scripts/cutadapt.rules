def get_fastq(wildcards):
    #print(config['raw_directory']+"/"+samples.loc[(wildcards.library,wildcards.run), ["r1_file", "r2_file"]].dropna())
    return config['raw_directory']+"/"+samples.loc[(wildcards.library,wildcards.run), ["r1_file", "r2_file"]].dropna()

rule primers_control:
    input:
        expand("preprocessing/{samples.run}/{samples.library}.{direction}.fastq", samples=samples.itertuples(), direction=["fwd","rvs"])
    output:
        "primers.done"
    shell:
        """
        touch {output}
        """

if config['sequencing_direction'] == "fwd_1":
    rule cut_primer_both:
        input:
            get_fastq
        output:
            "preprocessing/{run}/{library}.fwd.fastq",
            "preprocessing/{run}/{library}.rvs.fastq"
        threads: 1
        log: "logs/cutadapt.{run}.{library}.log"
        message: "Running cutadapt on {input}. Assuming forward primer is in read 1. {config[primers][fwd][sequence]}"
        shell:
            """
            TMPD=$(mktemp -d -t --tmpdir={TMPDIR} 'XXXXXX') 
            FWD_RC=`echo {config[primers][fwd][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`
            RVS_RC=`echo {config[primers][rvs][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TAACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`
                
            cutadapt -g {config[primers][fwd][sequence]} -G {config[primers][rvs][sequence]} \
            --no-indels -n {config[primer_cutting][count]} -O {config[primer_cutting][overlap]} \
            --match-read-wildcards -m 1:1 --pair-filter {config[primer_cutting][match]} \
            -j {threads} -e {config[primer_cutting][perc_mismatch]} --trimmed-only \
            -o $TMPD/{wildcards.library}.fwd.fastq -p $TMPD/{wildcards.library}.rvs.fastq {input} &> {log}

            cutadapt -a $RVS_RC -A $FWD_RC \
             --no-indels -n {config[primer_cutting][count]} \
             --match-read-wildcards -m 1:1 \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} \
             -o {output[0]} -p {output[1]} $TMPD/{wildcards.library}.fwd.fastq $TMPD/{wildcards.library}.rvs.fastq >> {log} 2>&1
             """

elif config['sequencing_direction'] == "rvs_1":
    rule cut_primers_both:
        input:
            get_fastq
        output:
            "preprocessing/{run}/{library}.fwd.fastq",
            "preprocessing/{run}/{library}.rvs.fastq"
        threads: 1
        log: "logs/cutadapt.{run}.{library}.log"
        message: "Running cutadapt on {input}. Assuming forward primer is in read 2."
        shell:
            """
            TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX")

            FWD_RC=`echo {config[primers][fwd][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TAACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`
            RVS_RC=`echo {config[primers][rvs][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TAACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`

            cutadapt -g {config[primers][rvs][sequence]} -G {config[primers][fwd][sequence]} \
             --no-indels -n {config[primer_cutting][count]} -O {config[primer_cutting][overlap]} \
             --match-read-wildcards -m 1:1 --pair-filter {config[primer_cutting][match]} \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} --trimmed-only \
             -o $TMPD/{wildcards.library}.rvs.fastq -p $TMPD/{wildcards.library}.fwd.fastq {input} &> {log}

            cutadapt -a $RVS_RC -A $FWD_RC \
             --no-indels -n {config[primer_cutting][count]} \
             --match-read-wildcards -m 1:1 \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} \
             -o {output[0]} -p {output[1]} $TMPD/{wildcards.library}.fwd.fastq $TMPD/{wildcards.library}.rvs.fastq >> {log}  2>&1
            """

else:
    rule cut_primers_both:
        input:
            get_fastq
        output:
            "preprocessing/{run}/{library}.fwd.fastq",
            "preprocessing/{run}/{library}.rvs.fastq"
        threads: 1
        log: "logs/cutadapt.{run}.{library}.log"
        message: "Running cutadapt on {input}. Searching for both  primers in both reads."
        shell:
            """
            TMPD=$(mktemp -d -t --tmpdir={TMPDIR} "XXXXXX")
            FWD_RC=`echo {config[primers][fwd][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TAACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`
            RVS_RC=`echo {config[primers][rvs][sequence]} | tr '[ATUGCYRSWKMBDHNatugcyrswkbdhvn]' '[TAACGRYSWMKVHDBNtaacgryswmkvhdbn]' |rev`

            cutadapt -g {config[primers][fwd][sequence]} -G {config[primers][rvs][sequence]} \
             --no-indels -n {config[primer_cutting][count]} -O {config[primer_cutting][overlap]} \
             --match-read-wildcards -m 1:1 --pair-filter {config[primer_cutting][match]} \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} \
             --untrimmed-output=$TMPD/{wildcards.library}.fwd_unt.fastq --untrimmed-paired-output=$TMPD/{wildcards.library}.rvs_unt.fastq \
             -o $TMPD/{wildcards.library}.fwd.fastq -p $TMPD/{wildcards.library}.rvs.fastq {input} &> {log}
            
            cutadapt -a $RVS_RC -A $FWD_RC \
             --no-indels -n {config[primer_cutting][count]} \
             --match-read-wildcards -m 1:1 \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} \
             -o {output[0]} -p {output[1]} $TMPD/{wildcards.library}.fwd.fastq $TMPD/{wildcards.library}.rvs.fastq >> {log} 2>&1

            cutadapt -g {config[primers][rvs][sequence]} -G {config[primers][fwd][sequence]} \
             --no-indels -n {config[primer_cutting][count]} -O {config[primer_cutting][overlap]} \
             --match-read-wildcards -m 1:1 --pair-filter {config[primer_cutting][match]} \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} --trimmed-only \
             -o $TMPD/{wildcards.library}.rvs_tr2.fastq -p $TMPD/{wildcards.library}.fwd_tr2.fastq \
             $TMPD/{wildcards.library}.fwd_unt.fastq $TMPD/{wildcards.library}.rvs_unt.fastq >> {log} 2>&1

            cutadapt -a $RVS_RC -A $FWD_RC \
             --no-indels -n {config[primer_cutting][count]} \   
             --match-read-wildcards -m 1:1 \
             -j {threads} -e {config[primer_cutting][perc_mismatch]} \
             -o $TMPD/{wildcards.library}.fwd.final.fastq -p $TMPD/{wildcards.library}.rvs.final.fastq \
             $TMPD/{wildcards.library}.fwd_tr2.fastq $TMPD/{wildcards.library}.rvs_tr2.fastq >> {log} 2>&1

            cat $TMPD/{wildcards.library}.fwd.final.fastq >> {output[0]}
            cat $TMPD/{wildcards.library}.rvs.final.fastq >> {output[1]}
            """



